---
name: Build docker image
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    tags:
      - v*
  workflow_run:
    workflows: ["Release"]
    types: [completed]
    branches: [main]
env:
  IMAGE_NAME: netbox-operator
  DOCKER_METADATA_PR_HEAD_SHA: true
jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493  # v5.0.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get tag information
        id: tag_info
        run: |
          LATEST_TAG=$(git tag --points-at HEAD || echo "no-tag")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

          # Print the values to pipeline logs
          echo "LATEST_TAG variable: $LATEST_TAG"

      - name: Debug tag information
        run: |
          echo "steps.tag_info.outputs.latest_tag: ${{ steps.tag_info.outputs.latest_tag }}"
        env:
          TAG: ${{ steps.tag_info.outputs.latest_tag }}

      - name: Generate docker image tag
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            # (for commits on the main branch only) generate a tag named `latest`
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # (for all commits) generate a tag named sha-[short sha value]
            type=sha,enable=true
            # (for tagged commits only) generate tags identical to the git tag version, with and without the leading v
            type=semver,pattern={{raw}},enable=${{ steps.tag_info.outputs.latest_tag != 'no-tag' }},value=steps.tag_info.outputs.latest_tag
            type=semver,pattern={{version}},enable=${{ steps.tag_info.outputs.latest_tag != 'no-tag' }},value=steps.tag_info.outputs.latest_tag
      - name: Print tags
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
