---
name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version that should be released, format: v0.0.0'
        required: true
        type: string
      tagMessage:
        description: 'Message that will be added to the version tag'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493  # v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fail if tag already exists
          existing_tags=$(gh release list --limit 1000 --json tagName --jq '.[].tagName')
          if echo "$existing_tags" | grep -qx "${{ inputs.version }}"; then
            echo "Release tag ${{ inputs.version }} already exists. Exiting."
            exit 1
          fi

          # Create release with auto-generated notes
          gh release create "${{ inputs.version }}" \
            --title "${{ inputs.version }}" \
            --notes "${{ inputs.tagMessage }}" \
            --generate-notes \
            $PRERELEASE

      - name: Update kustomization.yaml
        run: |
          ./scripts/bump-version.sh "${{ inputs.version }}"

      - name: Update CHANGELOG.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./scripts/update-changelog-from-release.sh "${{ inputs.version }}"

      - name: Commit and push changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if there are changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git add config/manager/kustomization.yaml CHANGELOG.md
          git commit -m "[skip ci] chore: bump version to ${{ inputs.version }} and update changelog"
          git push

          git tag -m inputs.tagMessage inputs.version
          git push --tags
